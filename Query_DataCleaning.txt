--standardize date format

SELECT SaleDate, CONVERT(Date,SaleDate) AS SaleDateNew
  FROM dbo.HousingData;

ALTER TABLE dbo.HousingData
	Add SaleDateConverted Date;

SELECT *
	FROM dbo.HousingData;

Update dbo.HousingData
SET SaleDateConverted = CONVERT(Date,SaleDate);

SELECT *
	FROM dbo.HousingData;

/*ALTER TABLE dbo.HousingData
	--Drop column SaleDate;*/

SELECT *
	FROM NashvilleHousing.dbo.HousingData
	WHERE PropertyAddress is null;

--populate property address data for null values using self join

SELECT *
FROM dbo.HousingData
--WHERE PropertyAddress is null;
order by ParcelID;

--if parcel ID has an address, populate the row with the same parcel ID with the same address

SELECT a.ParcelID, a.PropertyAddress, b.ParcelID, b.PropertyAddress, ISNULL(a.PropertyAddress, b.PropertyAddress) AS aPropertyAddress2
FROM dbo.HousingData a 
JOIN dbo.HousingData b
	ON a.ParcelID = b.ParcelID
	AND a.UniqueID <> b. UniqueID
WHERE a.PropertyAddress is null;

Update a
SET PropertyAddress = ISNULL(a.PropertyAddress, b.PropertyAddress)
FROM dbo.HousingData a 
JOIN dbo.HousingData b
	ON a.ParcelID = b.ParcelID
	AND a.UniqueID <> b. UniqueID
WHERE a.PropertyAddress is null;

SELECT *
FROM NashvilleHousing.dbo.HousingData;

--Break out property address and owner address into individual columns (address, city, state)

SELECT PropertyAddress
FROM NashvilleHousing.dbo.HousingData;

SELECT
SUBSTRING(PropertyAddress, 1, CHARINDEX(',',PropertyAddress)-1) AS Address,
SUBSTRING(PropertyAddress, CHARINDEX(',', PropertyAddress) +1, LEN(propertyaddress)) AS City
FROM NashvilleHousing.dbo.HousingData;

ALTER TABLE NashvilleHousing.dbo.HousingData
ADD PropertySplitAddress text;

Update NashvilleHousing.dbo.HousingData
SET PropertySplitAddress = SUBSTRING(PropertyAddress, 1, CHARINDEX(',',PropertyAddress)-1) ;

ALTER TABLE NashvilleHousing.dbo.HousingData
ADD PropertySplitCity text;

Update NashvilleHousing.dbo.HousingData
SET PropertySplitCity = SUBSTRING(PropertyAddress, CHARINDEX(',', PropertyAddress) +1, LEN(propertyaddress))
;

SELECT * 
FROM dbo.HousingData;

SELECT OwnerAddress
FROM dbo.HousingData;

SELECT PARSENAME(REPLACE(OwnerAddress, ',','.'), 3) 
, PARSENAME(REPLACE(OwnerAddress, ',','.'), 2)
, PARSENAME(REPLACE(OwnerAddress, ',','.'), 1)
FROM NashvilleHousing.dbo.HousingData;

ALTER TABLE NashvilleHousing.dbo.HousingData
ADD  SplitOwnerAddress text;

Update NashvilleHousing.dbo.HousingData
SET SplitOwnerAddress = PARSENAME(REPLACE(OwnerAddress, ',','.'), 3);

ALTER TABLE NashvilleHousing.dbo.HousingData
ADD  SplitOwnerCity text;



Update NashvilleHousing.dbo.HousingData
SET SplitOwnerCity = PARSENAME(REPLACE(OwnerAddress, ',','.'), 2);

ALTER TABLE NashvilleHousing.dbo.HousingData
ADD  SplitOwnerState text;

Update NashvilleHousing.dbo.HousingData
SET SplitOwnerState = PARSENAME(REPLACE(OwnerAddress, ',','.'), 1)

SELECT *
FROM dbo.HousingData;

--standardize y and n in sold as vacant field (converting 'y' and 'n' to 'yes' and 'no')

SELECT DISTINCT(SoldAsVacant), count(soldasvacant)
FROM dbo.HousingData
GROUP BY SoldAsVacant
ORDER BY 2;

SELECT SoldAsVacant
, CASE When SoldAsVacant = 'Y' THEN 'Yes'
	   When SoldAsVacant = 'N' THEN 'No'
	   Else SoldAsVacant
	   END
FROM NashvilleHousing.dbo.HousingData;

UPDATE NashvilleHousing.dbo.HousingData
SET SoldAsVacant = CASE When SoldAsVacant = 'Y' THEN 'Yes'
	   When SoldAsVacant = 'N' THEN 'No'
	   Else SoldAsVacant
	   END

--Remove duplicates

WITH RowNumCTE AS(

	SELECT *,
		ROW_NUMBER() OVER (
		PARTITION BY ParcelID,
					PropertyAddress,
					LegalReference,
					SaleDateConverted,
					SalePrice
				  ORDER BY 
					UniqueID
				)	row_num
	FROM NashvilleHousing.dbo.HousingData
)
SELECT *
FROM RowNumCTE

--delete duplicate rows that had more than one row in each partition
/*DELETE 
FROM RowNumCTE
WHERE row_num > 1*/

--delete unused columns

ALTER TABLE dbo.HousingData
DROP COLUMN OwnerAddress, TaxDistrict, PropertyAddress

SELECT *
FROM dbo.HousingData

